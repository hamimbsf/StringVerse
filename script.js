// üìå How to declare a string

// ‚ùå ‡¶≠‡ßÅ‡¶≤ ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø
// let string = hamim; // ReferenceError: hamim is not defined
// console.log(string);

// ‚úÖ ‡¶∏‡¶†‡¶ø‡¶ï ‡¶™‡¶¶‡ßç‡¶ß‡¶§‡¶ø:
// ‡¶ú‡¶æ‡¶≠‡¶æ‡¶∏‡ßç‡¶ï‡ßç‡¶∞‡¶ø‡¶™‡ßç‡¶ü‡ßá ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç (String) ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶≤‡ßá ‡¶Ö‡¶¨‡¶∂‡ßç‡¶Ø‡¶á ‡¶§‡ßã‡¶Æ‡¶æ‡¶ï‡ßá
// ‡¶°‡¶æ‡¶¨‡¶≤ ‡¶ï‡ßã‡¶ü (" ") ‡¶¨‡¶æ ‡¶∏‡¶ø‡¶ô‡ßç‡¶ó‡ßá‡¶≤ ‡¶ï‡ßã‡¶ü (' ') ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶≤‡ßá‡¶ñ‡¶æ‡¶ü‡¶ø ‡¶∞‡¶æ‡¶ñ‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§
// ‡¶®‡¶æ ‡¶π‡¶≤‡ßá JS ‡¶á‡¶û‡ßç‡¶ú‡¶ø‡¶® ‡¶∏‡ßá‡¶ü‡¶æ‡¶ï‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤ ‡¶¨‡¶æ ‡¶Ö‡¶™‡¶∞‡¶ø‡¶ö‡¶ø‡¶§ ‡¶®‡¶æ‡¶Æ ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶ß‡¶∞‡ßá ‡¶®‡ßá‡ßü,
// ‡¶è‡¶¨‡¶Ç ‡¶∏‡ßá‡¶ü‡¶æ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶®‡¶æ ‡¶™‡ßá‡¶≤‡ßá ReferenceError ‡¶¶‡ßá‡¶ñ‡¶æ‡ßü‡•§

// let string1 = "hamim";
// let string2 = "developer";

// ‡¶Ø‡ßá‡¶Æ‡¶® ‡¶è‡¶ñ‡¶æ‡¶®‡ßá "hamim" ‡¶∂‡¶¨‡ßç‡¶¶‡¶ü‡¶ø‡¶ï‡ßá ‡¶°‡¶æ‡¶¨‡¶≤ ‡¶ï‡ßã‡¶ü (" ") ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶∞‡¶æ‡¶ñ‡¶æ‡¶∞ ‡¶Æ‡¶æ‡¶ß‡ßç‡¶Ø‡¶Æ‡ßá ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶§‡ßà‡¶∞‡¶ø ‡¶ï‡¶∞‡¶æ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá‡•§

// console.log(string1); // Output: hamim
// console.log(string2); // Output: developer

// üö® Important Note:
// ‡¶Ö‡¶®‡ßá‡¶ï‡ßá ‡¶Æ‡¶®‡ßá ‡¶ï‡¶∞‡ßá JavaScript-‡¶è string ‡¶π‡¶≤‡ßã "array of characters"
// ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶Ü‡¶∏‡¶≤‡ßá ‡¶§‡¶æ ‡¶®‡ßü‡•§ ‡¶è‡¶ü‡¶ø array-‡¶è‡¶∞ ‡¶Æ‡¶§‡ßã behave ‡¶ï‡¶∞‡ßá ‚Äî ‡¶Ø‡ßá‡¶Æ‡¶® index ‡¶¶‡¶ø‡ßü‡ßá
// ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶∏‡ßá‡¶∏ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü, length ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü ‚Äî ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶è‡¶ü‡¶ø ‡¶Ü‡¶∏‡¶≤‡ßá ‡¶è‡¶ï‡¶ß‡¶∞‡¶®‡ßá‡¶∞
// primitive data type ‡¶è‡¶¨‡¶Ç immutable‡•§

// ‚úÖ ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé: string ‡¶π‡¶≤‡ßã ‡¶è‡¶ï‡¶ü‡¶ø character sequence, not a real array.

// let str = "hamim";

// console.log(str[0]); // Output: h
// console.log(str.length); // Output: 5

// ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶è‡¶ü‡¶æ ‡¶Ü‡¶∏‡¶≤ array ‡¶®‡¶æ, ‡¶§‡¶æ‡¶á ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶ï‡¶æ‡¶ú‡¶ó‡ßÅ‡¶≤‡ßã ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶¨‡ßá ‡¶®‡¶æ:
// str[0] = "H";
// console.log(str); // Output: hamim (‡¶ï‡ßã‡¶®‡ßã ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶π‡ßü‡¶®‡¶ø)

// üîí ‡¶ï‡¶æ‡¶∞‡¶£: JavaScript-‡¶è string immutable,
// ‡¶Æ‡¶æ‡¶®‡ßá ‡¶è‡¶ï‡¶¨‡¶æ‡¶∞ ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡¶≤‡ßá ‡¶§‡¶æ‡¶∞ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡¶ü‡¶æ‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü ‡¶®‡¶æ‡•§

// üìå How to access a character from a string variable

// let name = "hamim";
// console.log(name[0]); // Output: h

// üîç Explanation:
// ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶•‡ßá‡¶ï‡ßá ‡¶Ø‡ßá‡¶ï‡ßã‡¶®‡ßã ‡¶è‡¶ï‡¶ü‡¶ø ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶ï‡ßç‡¶∏‡ßá‡¶∏ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡¶≤‡ßá,
// ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßá, ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ array-‡¶è‡¶∞ ‡¶Æ‡¶§‡ßã index ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡ßü‡•§
// ‡¶Ø‡ßá‡¶Æ‡¶® ‡¶è‡¶ñ‡¶æ‡¶®‡ßá `name` ‡¶π‡¶≤‡ßã ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ,
// ‡¶Ü‡¶∞ `[0]` ‡¶Æ‡¶æ‡¶®‡ßá ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶Ö‡¶ï‡ßç‡¶∑‡¶∞ (index ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡ßü 0 ‡¶•‡ßá‡¶ï‡ßá)‡•§

// ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé: name[0] ‚Üí "h"

// Character Index Map:
// "h  a  m  i  m"
//  0  1  2  3  4

// üìå String vs Array of Characters

// ‚úÖ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ‡¶§:
// üëâ String ‡¶π‡¶≤‡ßã immutable (‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶®‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø ‡¶®‡¶æ)
// üëâ Array ‡¶π‡¶≤‡ßã mutable (‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶®‡¶Ø‡ßã‡¶ó‡ßç‡¶Ø)

// üì¶ Example 1: Array (Mutable)
// let arr = [1, 2, 3, 4];
// arr[0] = 0; // ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏‡ßá‡¶∞ ‡¶Æ‡¶æ‡¶® ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßá‡¶õ‡¶ø
// console.log(arr); // Output: [0, 2, 3, 4]

// üì¶ Example 2: String (Immutable)
// let greeting = "Hello";
// greeting[0] = "h"; // ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶Æ‡¶ø ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶Ö‡¶ï‡ßç‡¶∑‡¶∞ ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶®‡ßá‡¶∞ ‡¶ö‡ßá‡¶∑‡ßç‡¶ü‡¶æ ‡¶ï‡¶∞‡ßá‡¶õ‡¶ø
// console.log(greeting); // Output: Hello (‡¶ï‡ßã‡¶®‡ßã ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶π‡ßü‡¶®‡¶ø)

// üîç Explanation:
// ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶¶‡ßá‡¶ñ‡¶§‡ßá array-‡¶è‡¶∞ ‡¶Æ‡¶§‡ßã ‡¶π‡¶≤‡ßá‡¶ì, ‡¶è‡¶ü‡¶ø ‡¶Ü‡¶∏‡¶≤‡ßá ‡¶è‡¶ï‡¶ß‡¶∞‡¶®‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡¶ü‡¶ø‡¶≠ ‡¶ü‡¶æ‡¶á‡¶™‡•§
// ‡¶è‡¶¨‡¶Ç ‡¶è‡¶ü‡¶ø immutable ‡¶π‡¶ì‡¶Ø‡¶º‡¶æ‡¶Ø‡¶º greeting[0] = "h" ‡¶ï‡ßã‡¶®‡ßã ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ‡•§

// üìå Note: Mutable vs Reassign

// let str = "Ummmmmmm";
// str = "Na";
// console.log(str); // Output: Na

// üîç Explanation:
// ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç‡¶ü‡¶æ‡¶ï‡ßá ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡¶ø‡¶®‡¶ø, ‡¶¨‡¶∞‡¶Ç ‡¶™‡ßÅ‡¶∞‡ßã ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤‡¶ü‡¶æ‡¶ï‡ßá
// ‡¶®‡¶§‡ßÅ‡¶® ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶¶‡¶ø‡ßü‡ßá **reassign** ‡¶ï‡¶∞‡ßá‡¶õ‡¶ø‡•§

// ‚ö†Ô∏è ‡¶è‡¶ü‡¶æ ‡¶Ö‡¶®‡ßá‡¶ï‡ßá‡¶á ‡¶≠‡ßÅ‡¶≤ ‡¶ï‡¶∞‡ßá mutable ‡¶≠‡¶æ‡¶¨‡ßá ‚Äî
// ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶Ü‡¶∏‡¶≤‡ßá ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶è‡¶ñ‡¶®‡ßã immutable-‡¶á ‡¶Ü‡¶õ‡ßá‡•§
// ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶™‡ßÅ‡¶∞‡ßã‡¶®‡ßã ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡ßÅ ‡¶¨‡¶æ‡¶¶ ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶§‡ßÅ‡¶® ‡¶≠‡ßç‡¶Ø‡¶æ‡¶≤‡ßÅ ‡¶¨‡¶∏‡¶ø‡ßü‡ßá‡¶õ‡¶ø‡•§

// üß† ‡¶Æ‡¶®‡ßá ‡¶∞‡¶æ‡¶ñ‡ßã:
// ‚úÖ Mutable ‡¶Æ‡¶æ‡¶®‡ßá ‡¶π‡¶ö‡ßç‡¶õ‡ßá: ‡¶°‡ßá‡¶ü‡¶æ‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞‡ßá‡¶∞ ‡¶Ö‡¶Ç‡¶∂ (‡¶Ø‡ßá‡¶Æ‡¶® index ‡¶ß‡¶∞‡ßá ‡¶¨‡¶æ ‡¶∏‡¶∞‡¶æ‡¶∏‡¶∞‡¶ø) ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü ‚Äî ‡¶Ø‡ßá‡¶Æ‡¶® Array
// ‚ùå String-‡¶è `+` ‡¶¨‡¶æ `concat()` ‡¶¶‡¶ø‡ßü‡ßá ‡¶®‡¶§‡ßÅ‡¶® string ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã ‡¶ó‡ßá‡¶≤‡ßá‡¶ì,
//     ‡¶Æ‡ßÇ‡¶≤ string ‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§ ‡¶•‡¶æ‡¶ï‡ßá ‚Äî ‡¶ï‡¶æ‡¶∞‡¶£ string ‡¶π‡¶≤‡ßã immutable‡•§

// üì¶ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£:
// let str2 = "Ummmmmmm";
// let newStr = str2 + "hea";

// console.log(str2); // Output: Ummmmmmm (‡¶™‡ßÅ‡¶∞‡¶æ‡¶§‡¶® string ‡¶Ö‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶ø‡¶§)
// console.log(newStr); // Output: Ummmmmmmhea (‡¶®‡¶§‡ßÅ‡¶® string ‡¶§‡ßà‡¶∞‡¶ø ‡¶π‡ßü‡ßá‡¶õ‡ßá)

// ‚ùå Reassign ‡¶Æ‡¶æ‡¶®‡ßá ‡¶π‡¶ö‡ßç‡¶õ‡ßá: ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤‡ßá‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡ßÇ‡¶∞‡ßç‡¶£ ‡¶Æ‡¶æ‡¶® ‡¶®‡¶§‡ßÅ‡¶® ‡¶ï‡¶∞‡ßá ‡¶∏‡ßá‡¶ü ‡¶ï‡¶∞‡¶æ ‚Äî ‡¶Ø‡ßá‡¶ü‡¶æ primitive ‡¶ü‡¶æ‡¶á‡¶™‡ßá ‡¶π‡ßü

// üîΩ Methods of string

// üìå 1. length
// üëâ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç‡ßü‡ßá‡¶∞ ‡¶¶‡ßà‡¶∞‡ßç‡¶ò‡ßç‡¶Ø (‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé ‡¶ï‡¶§‡¶ü‡¶ø ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞ ‡¶Ü‡¶õ‡ßá) ‡¶ú‡¶æ‡¶®‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶π‡ßü‡•§

// let name = "Hamim";
// console.log(name.length); // Output: 5

// Note -> length ‡¶π‡¶≤‡ßã ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶™‡¶æ‡¶∞‡ßç‡¶ü‡¶ø, ‡¶è‡¶ü‡¶ø ‡¶ï‡ßã‡¶® ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® ‡¶®‡ßü‡•§ ‡¶§‡¶æ‡¶á () ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡ßü ‡¶®‡¶æ‡•§

// üìå 2. toUpperCase()
// üëâ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç-‡¶è‡¶∞ ‡¶∏‡¶¨ ‡¶Ö‡¶ï‡ßç‡¶∑‡¶∞‡¶ï‡ßá capital/uppercase ‡¶¨‡¶æ‡¶®‡¶æ‡ßü‡•§

// let word = "developer";
// let upperWord = word.toUpperCase();

// console.log(upperWord); // Output: DEVELOPER

// Note -> ‡¶è‡¶á ‡¶Æ‡ßá‡¶•‡¶° ‡¶Æ‡ßÇ‡¶≤ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç‡¶ï‡ßá ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ, ‡¶¨‡¶∞‡¶Ç ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá‡•§

// üìå 3. toLowerCase()
// üëâ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç-‡¶è‡¶∞ ‡¶∏‡¶¨ ‡¶Ö‡¶ï‡ßç‡¶∑‡¶∞‡¶ï‡ßá small/lowercase ‡¶¨‡¶æ‡¶®‡¶æ‡ßü‡•§
// let word = "JAVASCRIPT";
// let lowerWord = word.toLowerCase();

// console.log(lowerWord); // Output: javascript

// Note -> ‡¶è‡¶á ‡¶Æ‡ßá‡¶•‡¶° ‡¶Æ‡ßÇ‡¶≤ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç‡¶ï‡ßá ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ, ‡¶¨‡¶∞‡¶Ç ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶§‡ßÅ‡¶® ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá‡•§

// üìå 4. slice(start, end)
// üëâ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç-‡¶è‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü ‡¶Ö‡¶Ç‡¶∂ ‡¶ï‡ßá‡¶ü‡ßá ‡¶®‡¶ø‡ßü‡ßá ‡¶Ü‡¶∏‡ßá‡•§

// let text = "JavaScript";
// let sliced = text.slice(0, 4); // ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡ß¶ index ‡¶•‡ßá‡¶ï‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶π‡¶Ø‡¶º‡ßá‡¶õ‡ßá ‡¶è‡¶¨‡¶Ç index no. 4 ‡¶è‡¶∞ ‡¶Ü‡¶ó ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏ 3 ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶¶‡¶ø‡¶¨‡ßá (0,1,2,3)

// console.log(sliced); // Output: Java

//Note --> slice() ‡¶Æ‡ßá‡¶•‡¶°‡ßá negative index ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡¶Ø‡¶º‡•§
//‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶≠‡ßç‡¶Ø‡¶æ‡¶∞‡¶ø‡ßü‡ßá‡¶¨‡¶≤ ‡¶è‡¶∞ ‡¶∏‡¶∞‡ßç‡¶¨‡¶∂‡ßá‡¶∑ ‡¶Æ‡¶æ‡¶® slice -1 ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨‡ßá ‡¶®‡ßá‡¶á <-- ‡¶è‡¶á ‡¶∏‡¶ø‡¶ï‡ßã‡ßü‡ßá‡¶®‡ßç‡¶∏ ‡¶è ‡¶Ø‡¶æ‡¶á ‡¶Ü‡¶∞ ‡¶è‡¶ï ‡¶è‡¶ï ‡¶ï‡¶∞‡ßá ‡¶ï‡¶Æ‡¶§‡ßá ‡¶•‡¶æ‡¶ï‡ßá

// let text = "JavaScript";
// let sliced = text.slice(-6, text.length);
// ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé ‡¶∂‡ßá‡¶∑ ‡¶•‡ßá‡¶ï‡ßá 6‡¶ü‡¶ø ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞ ‡¶Ü‡¶ó‡ßá ‡¶•‡ßá‡¶ï‡ßá ‡¶∂‡ßÅ‡¶∞‡ßÅ, ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ ‡¶∂‡ßá‡¶∑ ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§

// console.log(sliced); //Script

// console.log(text.slice(-6)); // Output: Script
// ‡¶Ø‡¶ñ‡¶® ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶è‡¶ï‡¶ü‡¶æ‡¶á negative index ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶π‡ßü, ‡¶§‡¶ñ‡¶® ‡¶∏‡ßá‡¶ü‡¶æ ‡¶∂‡ßá‡¶∑ ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶ï‡ßá‡¶ü‡ßá ‡¶®‡ßá‡ßü‡•§

// üìå 5. substring(start, end)
// üëâ slice() ‡¶è‡¶∞ ‡¶Æ‡¶§‡ßã‡¶á ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ negative index ‡¶ó‡ßç‡¶∞‡¶π‡¶£ ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ‡•§

// let msg = "Programming";
// console.log(msg.substring(0, 5)); // Output: Progr

// üìå 6. includes(value)
// üëâ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç-‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶ï‡ßã‡¶®‡ßã word ‡¶¨‡¶æ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞ ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ ‚Äî ‡¶§‡¶æ ‡¶Ø‡¶æ‡¶ö‡¶æ‡¶á ‡¶ï‡¶∞‡ßá true ‡¶¨‡¶æ false ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá‡•§

// let quote = "Never give up";
// console.log(quote.includes("give")); // Output: true
// console.log(quote.includes("fail")); // Output: false

// üìå 7. concat()
// üëâ ‡¶¶‡ßÅ‡¶ü‡¶ø ‡¶¨‡¶æ ‡¶§‡¶æ‡¶∞ ‡¶Ö‡¶ß‡¶ø‡¶ï ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç‡¶ï‡ßá ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá ‡¶ú‡ßã‡¶°‡¶º‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡ßÉ‡¶§ ‡¶π‡¶Ø‡¶º‡•§

// let str = "Hello";
// let newStr = str.concat(" World");

// console.log(newStr); // Output: Hello World

// üîç Explanation:
// concat() ‡¶Æ‡ßá‡¶•‡¶° ‡¶Æ‡ßÇ‡¶≤ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç‡¶ü‡¶ø‡¶ï‡ßá ‡¶™‡¶∞‡¶ø‡¶¨‡¶∞‡ßç‡¶§‡¶® ‡¶ï‡¶∞‡ßá ‡¶®‡¶æ,
// ‡¶¨‡¶∞‡¶Ç ‡¶®‡¶§‡ßÅ‡¶® ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá‡•§

// ‚ùó ‡¶è‡¶ü‡¶ø ‡¶è‡¶ï‡¶á ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá ‡¶Ø‡¶æ + ‡¶Ö‡¶™‡¶æ‡¶∞‡ßá‡¶ü‡¶∞ ‡¶ï‡¶∞‡ßá, ‡¶Ø‡ßá‡¶Æ‡¶®:
// let newStr2 = str + " World";
// console.log(newStr2); // Output: Hello World

// üîÅ ‡¶Ü‡¶™‡¶®‡¶ø ‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá concat ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßá‡¶®:

// let sentence = "I ".concat("am ", "learning ", "JavaScript!");
// console.log(sentence); // Output: I am learning JavaScript!

// üìå 8. trim()
// üëâ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç-‡¶è‡¶∞ ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶è‡¶¨‡¶Ç ‡¶∂‡ßá‡¶∑‡ßá‡¶∞ ‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶∏‡ßç‡¶™‡ßá‡¶∏ (whitespace) ‡¶ï‡ßá‡¶ü‡ßá ‡¶´‡ßá‡¶≤‡ßá‡•§

// let str = "         Hello          ";
// let trimmed = str.trim();

// console.log(trimmed); // Output: Hello

// Most Important

// üìå 9. charAt(index)

// üëâ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç-‡¶è‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏‡ßá ‡¶•‡¶æ‡¶ï‡¶æ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞ ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá‡•§

// let str = "javascript";
// let newStr = str.charAt(0);

// console.log(newStr); // Output: j

// üîç Explanation:
// charAt() ‡¶Æ‡ßÇ‡¶≤‡¶§ str[0] ‡¶è‡¶∞ ‡¶Æ‡¶§‡ßã‡¶á ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá ‚Äî
// ‡¶Ö‡¶∞‡ßç‡¶•‡¶æ‡ßé ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü index-‡¶è ‡¶•‡¶æ‡¶ï‡¶æ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞ ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá‡•§

// ‚úÖ Similar to:
// console.log(str[0]); // Output: j

// ‚ö†Ô∏è ‡¶§‡¶¨‡ßá:
// ‡¶Ø‡¶¶‡¶ø ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏ string-‡¶è‡¶∞ range ‡¶è‡¶∞ ‡¶¨‡¶æ‡¶á‡¶∞‡ßá ‡¶π‡ßü...

// console.log(str.charAt(100)); // Output: "" (empty string)
// console.log(str[100]); // Output: undefined

// ‡¶§‡¶æ‡¶á ‡¶™‡ßÅ‡¶∞‡¶®‡ßã ‡¶¨‡ßç‡¶∞‡¶æ‡¶â‡¶ú‡¶æ‡¶∞ ‡¶¨‡¶æ ‡¶≠‡ßÅ‡¶≤ ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏ ‡¶π‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶°‡ßá‡¶≤ ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶á‡¶≤‡ßá charAt() ‡¶®‡¶ø‡¶∞‡¶æ‡¶™‡¶¶‡•§

// üìå 10. charCodeAt(index)
// üëâ ‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡¶ø‡¶Ç-‡¶è‡¶∞ ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü ‡¶á‡¶®‡¶°‡ßá‡¶ï‡ßç‡¶∏‡ßá ‡¶•‡¶æ‡¶ï‡¶æ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞‡ßá‡¶∞ Unicode (ASCII code) ‡¶∞‡¶ø‡¶ü‡¶æ‡¶∞‡ßç‡¶® ‡¶ï‡¶∞‡ßá‡•§

// let str = "javascript";
// let newStr = str.charCodeAt(0);

// console.log(newStr); // Output: 106

// console.log("a".charCodeAt(0)); // 97
// console.log("A".charCodeAt(0)); // 65

// üìå ASCII / Unicode Code ‡¶ï‡¶ø?
// ‡¶è‡¶¨‡¶Ç ‡¶è‡¶ü‡¶æ ‡¶ú‡¶æ‡¶®‡¶æ ‡¶ï‡ßá‡¶® ‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø?

//üî§ ASCII ‡¶ï‡¶ø?
// ASCII (American Standard Code for Information Interchange) ‡¶π‡¶≤‡ßã:

// ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶æ‡¶ö‡ßÄ‡¶® ‡¶ï‡ßã‡¶°‡¶ø‡¶Ç ‡¶∏‡¶ø‡¶∏‡ßç‡¶ü‡ßá‡¶Æ ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞‡¶ï‡ßá (letter, digit, symbol) ‡¶è‡¶ï‡¶ü‡¶ø ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶¶‡¶ø‡ßü‡ßá represent ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§

// charCodeAt() ‡¶¶‡¶ø‡ßü‡ßá ASCII ‡¶ï‡ßã‡¶° ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã
// let char = "a";
// console.log(char.charCodeAt(0)); // Output: 97

//üß† ‡¶è‡¶ñ‡¶® ‡¶™‡ßç‡¶∞‡¶∂‡ßç‡¶® ‚Äî ‡¶è‡¶ü‡¶æ ‡¶ú‡¶æ‡¶®‡¶æ ‡¶ú‡¶∞‡ßÅ‡¶∞‡¶ø ‡¶ï‡ßá‡¶®?

// 1Ô∏è‚É£ ‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞ ‡¶¨‡ßÅ‡¶ù‡ßá ‡¶®‡¶æ, ‡¶¨‡ßÅ‡¶ù‡ßá ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞
// ‡¶§‡ßÅ‡¶Æ‡¶ø "A" ‡¶≤‡¶ø‡¶ñ‡ßã, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ JS ‡¶¨‡¶æ ‡¶ï‡¶Æ‡ßç‡¶™‡¶ø‡¶â‡¶ü‡¶æ‡¶∞ ‡¶∏‡ßá‡¶ü‡¶æ‡¶ï‡ßá 65 ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá‡¶á ‡¶∞‡¶æ‡¶ñ‡ßá‡•§

// "A" === 65; // false, ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ internally "A" ‚Üí 65

// 2Ô∏è‚É£ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞ ‡¶®‡¶ø‡ßü‡ßá ‡¶ï‡ßã‡¶®‡ßã ‡¶§‡ßÅ‡¶≤‡¶®‡¶æ (compare), ‡¶ó‡¶£‡¶®‡¶æ, ‡¶π‡¶ø‡¶∏‡¶æ‡¶¨ ‡¶ï‡¶∞‡¶§‡ßá ‡¶ó‡ßá‡¶≤‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ü‡¶∏‡¶≤‡ßá ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶®‡¶ø‡ßü‡ßá ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡¶õ‡ßã
// "a" > "A"; // true ‚Äî ‡¶ï‡¶æ‡¶∞‡¶£ 'a' = 97, 'A' = 65

// 3Ô∏è‚É£ ‡¶è‡¶ü‡¶æ ‡¶ú‡¶æ‡¶®‡¶≤‡ßá ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞ ‡¶¶‡¶ø‡ßü‡ßá logic build ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã (e.g. encrypt, shift, sort, match)
// let ch = "d";
// let shifted = String.fromCharCode(ch.charCodeAt(0) + 1);
// console.log(shifted); // Output: e

// 4Ô∏è‚É£ A-Z, a-z, 0-9 ‡¶è‡¶∞ range ‡¶¨‡ßÅ‡¶ù‡ßá ‡¶ï‡¶®‡ßç‡¶°‡¶ø‡¶∂‡¶® ‡¶≤‡¶ø‡¶ñ‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã
// let ch = "K";
// if (ch.charCodeAt(0) >= 65 && ch.charCodeAt(0) <= 90) {
//   console.log("Capital Letter");
// }

// üìå Unicode ‡¶ï‡¶ø?
// Unicode ‡¶π‡¶≤‡ßã ASCII-‡¶è‡¶∞ ‡¶Ü‡¶ß‡ßÅ‡¶®‡¶ø‡¶ï ‡¶ì ‡¶¨‡ßú ‡¶∏‡¶Ç‡¶∏‡ßç‡¶ï‡¶∞‡¶£
// ‚Äì ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶á‡¶Ç‡¶∞‡ßá‡¶ú‡¶ø ‡¶õ‡¶æ‡ßú‡¶æ‡¶ì ‡¶ö‡¶æ‡¶á‡¶®‡¶ø‡¶ú, ‡¶Ü‡¶∞‡¶¨‡¶ø, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ ‡¶∏‡¶π ‡¶∏‡¶¨ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶∞‡ßá‡¶ï‡ßç‡¶ü‡¶æ‡¶∞‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ ‡¶Ü‡¶õ‡ßá‡•§

// JavaScript ‡¶è charCodeAt() ‚Üí Unicode system ‡¶´‡¶≤‡ßã ‡¶ï‡¶∞‡ßá‡•§
